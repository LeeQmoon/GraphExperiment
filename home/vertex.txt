#version 430 core
layout(location = 0) in vec3 aPos;
layout(location = 1)in vec2 Texcoord;
layout(location = 2)in vec3 Normal;
layout(location = 3)in vec3 Tangent;

out vec2 TextureCoord;
out vec3 Position;
out vec3 TangentFragPos;
out vec3 TangentLightPos;
out vec3 TangentEyePos;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform vec3 LightPosition;
uniform vec3 Eye;

void main(){
    Position = vec3(model*vec4(aPos,1.0));
    gl_Position=projection*view*model*vec4(aPos.x,aPos.y,aPos.z,1.0);
    mat3 normalMatrix = transpose(inverse(mat3(model)));
    vec3 NormalCoord = normalize(normalMatrix*Normal);
    vec3 TangenCoord = normalize(normalMatrix*Tangent);
    vec3 Bitangent = cross(NormalCoord,TangenCoord);
    vec3 BitangentCoord = normalize(Bitangent);
    
    mat3 TBN = transpose(mat3(
        TangenCoord,
        BitangentCoord,
        NormalCoord
    ));
    TangentLightPos = TBN*LightPosition;
    TangentEyePos = TBN*Eye;
    TangentFragPos = TBN*Position;
    TextureCoord = Texcoord;
}